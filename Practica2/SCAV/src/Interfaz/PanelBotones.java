/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Interfaz;
import Salpicadero.SalpicaderoObjetivo;
import Salpicadero.EstadoMotor;
import Salpicadero.EstadoMotor;
import Salpicadero.SalpicaderoObjetivo;

/**
 *
 * @author juanfrandm98
 */
public class PanelBotones extends javax.swing.JFrame {

    /** Creates new form OtroPanelBotones */
    public PanelBotones() {
        initComponents();
        
        estado = EstadoMotor.APAGADO;
        botonAcelerar.setEnabled(false);
        botonMantener.setEnabled(false);
        acelerarsistema.setEnabled(false);
        botonReiniciar.setEnabled(false);
        this.apagarsistema.setEnabled(false);
        encendido = false;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        etiqEstado = new javax.swing.JLabel();
        botonEncender = new javax.swing.JButton();
        botonAcelerar = new javax.swing.JToggleButton();
        botonFrenar = new javax.swing.JToggleButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0));
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        botonMantener = new javax.swing.JToggleButton();
        acelerarsistema = new javax.swing.JToggleButton();
        botonReiniciar = new javax.swing.JToggleButton();
        apagarsistema = new javax.swing.JToggleButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 357, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        etiqEstado.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        etiqEstado.setText("APAGADO");

        botonEncender.setText("Encender");
        botonEncender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEncenderActionPerformed(evt);
            }
        });

        botonAcelerar.setText("Acelerar");
        botonAcelerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAcelerarActionPerformed(evt);
            }
        });

        botonFrenar.setText("Frenar");
        botonFrenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonFrenarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("SISTEMA MANUAL");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("SCACV");

        botonMantener.setText("Mantener");
        botonMantener.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMantenerActionPerformed(evt);
            }
        });

        acelerarsistema.setText("Acelerar");
        acelerarsistema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acelerarsistemaActionPerformed(evt);
            }
        });

        botonReiniciar.setText("Reiniciar");
        botonReiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonReiniciarActionPerformed(evt);
            }
        });

        apagarsistema.setText("Apagar");
        apagarsistema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apagarsistemaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(apagarsistema)
                        .addGap(13, 13, 13)
                        .addComponent(botonReiniciar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(acelerarsistema)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonMantener))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(etiqEstado))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(botonEncender, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(botonAcelerar)))
                        .addGap(18, 18, 18)
                        .addComponent(botonFrenar))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(etiqEstado)
                        .addGap(8, 8, 8)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botonEncender, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonAcelerar)
                            .addComponent(botonFrenar)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(acelerarsistema, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonMantener, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonReiniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(apagarsistema, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private EstadoMotor estado;
    private SalpicaderoObjetivo salpicadero;
    
    public EstadoMotor getEstado() { return estado; }
    
    public void aniadirSalpicadero( SalpicaderoObjetivo salpicadero ) {
        this.salpicadero = salpicadero;
    }
    
    public void tieneGasolina( boolean estado ) {
        
        if( estado == false && encendido == true ) {
            encendido = false;
            this.estado = EstadoMotor.APAGADO;
            etiqEstado.setText( this.estado.toString() );
            botonEncender.setText( "Encender" );
        }
        
        botonEncender.setEnabled( estado );
        botonAcelerar.setEnabled( estado );
        
    }
    
    private void botonEncenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEncenderActionPerformed
        
        if( estado == EstadoMotor.APAGADO ) {
            
            // Cambiamos el estado
            estado = EstadoMotor.ENCENDIDO;
            encendido = true;
           
            // Activamos los pedales
            botonAcelerar.setEnabled( true );
            
            // Modificamos el botón de Encender
            botonEncender.setText( "Apagar" );
            
           
        } else {
            
            // Cambiamos el estado
            estado = EstadoMotor.APAGADO;
            encendido = false;
            
            // Desactivamos los pedales
            botonAcelerar.setEnabled( false );
            botonAcelerar.setSelected(false);
            botonFrenar.setSelected(false);
            
            // Reiniciamos el cuentakilómetros
            salpicadero.reiniciarKM();
            
            // Modificamos el botón de Encender
            botonEncender.setText( "Encender" );
            
            botonMantener.setSelected(false);
            botonReiniciar.setSelected(false);
            acelerarsistema.setSelected(false);
            apagarsistema.setSelected(false);
            botonMantener.setEnabled(false);
            botonReiniciar.setEnabled(false);
            acelerarsistema.setEnabled(false);
            apagarsistema.setEnabled(false);
        }
        
        etiqEstado.setText( estado.toString() );
        
    }//GEN-LAST:event_botonEncenderActionPerformed

    private void botonAcelerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAcelerarActionPerformed

        if( estado == EstadoMotor.ACELERANDO ){
            estado = EstadoMotor.ENCENDIDO;     
            acelerarsistema.setEnabled(true);
        }else {
            estado = EstadoMotor.ACELERANDO;
            botonFrenar.setSelected( false );
            acelerarsistema.setEnabled(true);
        }
        
        etiqEstado.setText( estado.toString() );
            }//GEN-LAST:event_botonAcelerarActionPerformed

    private void botonFrenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonFrenarActionPerformed

        if( estado == EstadoMotor.FRENANDO && encendido == true ){
            estado = EstadoMotor.ENCENDIDO;
            acelerarsistema.setEnabled(false);
             acelerarsistema.setEnabled(false);
             botonMantener.setSelected(false);
             botonMantener.setEnabled(false);
             apagarsistema.setEnabled(true);
             botonAcelerar.setEnabled(true);
           
            
        } else if( estado == EstadoMotor.FRENANDO && encendido == false )
            estado = EstadoMotor.APAGADO;
        else {
            if(estado == EstadoMotor.MANTENIENDO){
                botonMantener.setSelected(false);
                botonMantener.setEnabled(false);
                botonReiniciar.setEnabled(true);
               
            }else if (estado == EstadoMotor.ACELERANDOSIS){
              
                botonMantener.setSelected(false);
                botonMantener.setEnabled(false);
            }else if(estado == EstadoMotor.REINICIAR){
                botonReiniciar.setSelected(false);
            }
            estado = EstadoMotor.FRENANDO;
            botonAcelerar.setSelected(false);
           
        }
         
         acelerarsistema.setSelected( false );
         acelerarsistema.setEnabled(false);
        
        etiqEstado.setText( estado.toString() );
            }//GEN-LAST:event_botonFrenarActionPerformed

    private void botonMantenerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonMantenerActionPerformed
        // TODO add your handling code here:
        if (estado == EstadoMotor.ACELERANDOSIS && encendido == true){
            estado = EstadoMotor.MANTENIENDO;
            acelerarsistema.setSelected(false);
            botonAcelerar.setEnabled(false);
            botonReiniciar.setEnabled(true);
            apagarsistema.setEnabled(true);
            acelerarsistema.setEnabled(false);
            botonReiniciar.setEnabled(false);
        }
            
        
        etiqEstado.setText( estado.toString() );
            
    }//GEN-LAST:event_botonMantenerActionPerformed

    private void acelerarsistemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acelerarsistemaActionPerformed
        // TODO add your handling code here:
        if (estado == EstadoMotor.ACELERANDO && encendido == true){
             estado = EstadoMotor.ACELERANDOSIS;
             botonMantener.setEnabled(true);
             botonAcelerar.setSelected(false);
        }
        etiqEstado.setText( estado.toString() );
           
    }//GEN-LAST:event_acelerarsistemaActionPerformed

    private void botonReiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonReiniciarActionPerformed
        // TODO add your handling code here:
        if(estado == EstadoMotor.ENCENDIDO || estado == EstadoMotor.FRENANDO || estado == EstadoMotor.ACELERANDOSIS && encendido) {
            estado = EstadoMotor.REINICIAR;
            botonReiniciar.setSelected(false);
            acelerarsistema.setSelected(false);
            acelerarsistema.setEnabled(false);
            botonAcelerar.setEnabled(false);
            botonFrenar.setSelected(false);
           
        }
        etiqEstado.setText( estado.toString() );

    }//GEN-LAST:event_botonReiniciarActionPerformed

    private void apagarsistemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apagarsistemaActionPerformed
        // TODO add your handling code here:
        if(encendido){
            estado = EstadoMotor.ENCENDIDO;
            apagarsistema.setSelected(false);
            apagarsistema.setEnabled(false);
            botonMantener.setSelected(false);
            botonMantener.setEnabled(false);
            botonReiniciar.setSelected(false);
            botonReiniciar.setEnabled(false);
            botonAcelerar.setEnabled(true);
        }
        
        etiqEstado.setText( estado.toString() );

    }//GEN-LAST:event_apagarsistemaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PanelBotones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PanelBotones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PanelBotones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PanelBotones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PanelBotones().setVisible(true);
            }
        });
    }
    
    public boolean getApagado() {
        return !encendido;
    }

    boolean encendido;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton acelerarsistema;
    private javax.swing.JToggleButton apagarsistema;
    private javax.swing.JToggleButton botonAcelerar;
    private javax.swing.JButton botonEncender;
    private javax.swing.JToggleButton botonFrenar;
    private javax.swing.JToggleButton botonMantener;
    private javax.swing.JToggleButton botonReiniciar;
    private javax.swing.JLabel etiqEstado;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSplitPane jSplitPane1;
    // End of variables declaration//GEN-END:variables

}
